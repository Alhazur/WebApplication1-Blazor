@inject Toolbelt.Blazor.I18nText.I18nText I18nText

<div class="container">

    <div class="top-row pl-40 navbar navbar-dark">

        <a class="navbar-brand" href="">
            <img class="img-buster75" src="/images/buster75-logo-text.svg" />
        </a>
        <AuthorizeView>
            <Authorized>
                <div>
                    Hello, @context.User.Identity.Name!
                </div>
            </Authorized>
        </AuthorizeView>
        <div>
            <div class="selectLanguage">
                <div class="langflag English @(CurrentLang == "en" ? "selected" : "")" @onclick=@(async() => await ChangeLanguage("en"))></div>
                <div class="langflag Swedish @(CurrentLang == "sv" ? "selected" : "")" @onclick=@(async() => await ChangeLanguage("sv"))></div>
            </div>
            <AuthorizeView>
                <Authorized>
                    <div class="btnLogin1">
                        <a class="btnLogin2" href="LogOut">Logout</a>
                    </div>
                </Authorized>
                <NotAuthorized>
                    <div class="btnLogin1">
                        <a class="btnLogin2" href="Login">Login</a>
                    </div>
                </NotAuthorized>
            </AuthorizeView>
        </div>
        @*<select class="selectLanguage" @onchange="OnChangeCurrentLang">
            <option class="English" value="en" selected="@(CurrentLang == "en")">English</option>
            <option class="Swedish" value="sv" selected="@(CurrentLang == "sv")">Swedish</option>
        </select>*@

    </div>
</div>

@code {
    I18nText.MyText MyText = new I18nText.MyText();

    string CurrentLang;

    protected override async Task OnInitializedAsync()
    {
        var lang = await I18nText.GetCurrentLanguageAsync();
        if (new[] { "en", "sv" }.Contains(lang.Split('-')[0]))
        {
            CurrentLang = lang;
        }
        else
        {
            CurrentLang = "en";
        }

        MyText = await I18nText.GetTextTableAsync<I18nText.MyText>(this);
    }

    async Task OnChangeCurrentLang(UIChangeEventArgs args)
    {
        Console.WriteLine($"OnChange: {args.Type}, {args.Value}");
        CurrentLang = args.Value as string;
        await I18nText.SetCurrentLanguageAsync(CurrentLang);
    }

    async Task ChangeLanguage(string lang)
    {
        CurrentLang = lang;
        await I18nText.SetCurrentLanguageAsync(lang);
    }
}
